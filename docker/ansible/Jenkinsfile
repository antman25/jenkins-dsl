node()
{
	def has_mods = false

	stage('Git Checkout')
	{
		//checkout scm
		checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins_ssh', url: 'http://gitlab.antlinux.local:30080/antman/data_center.git']]])
	}
	GIT_COMMIT_REV_POST = sh(returnStdout: true, script: "git rev-parse HEAD").trim()

	stage('Get Modified Files')
	{
		try
		{
			def LAST_SUCCESSFUL = readFile("${WORKSPACE}/LAST_SUCCESS_HASH").trim()
			echo "Last Successful commit hash: ${LAST_SUCCESSFUL}"
			def modified_files = sh(returnStdout: true, script: "git diff --name-only ${LAST_SUCCESSFUL}").trim()
			echo "Modified Files:\n${modified_files}"
			def loc = modified_files.indexOf('docker-library/ansible')
			if (loc >= 0)
			{
				has_mods = true
			}
		}
		catch (Exception ex)
		{
			echo "Exception getting last commit"
			has_mods = true
		}
	}
	stage('Build and Publish')
	{
		echo "Has Mods: ${has_mods}"
		if (has_mods == true)
		{
			sh("${WORKSPACE}/docker-library/ansible/build_jenkins.sh")
		}
	}
	stage('Save Commit Hash')
	{
		if (has_mods == true)
		{
			sh("echo ${GIT_COMMIT_REV_POST} > LAST_SUCCESS_HASH")
		}
	}
}
